openapi: 3.0.3
info:
  title: Pet Management API
  description: A simple web application for managing pets, using an in-memory list as a database.
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:8080
    description: Local development server

tags:
  - name: Pet
    description: Pet management API

paths:
  /api/pets:
    get:
      tags:
        - Pet
      summary: Get all pets
      description: Retrieves a list of all pets in the system
      operationId: getAllPets
      responses:
        '200':
          description: Successfully retrieved the list of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
    post:
      tags:
        - Pet
      summary: Create a new pet
      description: Creates a new pet in the system
      operationId: createPet
      requestBody:
        description: Pet object to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '201':
          description: Pet successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'

  /api/pets/{id}:
    get:
      tags:
        - Pet
      summary: Get a pet by ID
      description: Retrieves a pet by its ID
      operationId: getPetById
      parameters:
        - name: id
          in: path
          description: ID of the pet to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully retrieved the pet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '404':
          description: Pet not found
    put:
      tags:
        - Pet
      summary: Update an existing pet
      description: Updates an existing pet's information
      operationId: updatePet
      parameters:
        - name: id
          in: path
          description: ID of the pet to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Updated pet object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '200':
          description: Pet successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '404':
          description: Pet not found
    delete:
      tags:
        - Pet
      summary: Delete a pet
      description: Deletes a pet from the system by its ID
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of the pet to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Pet successfully deleted
        '404':
          description: Pet not found

components:
  schemas:
    Pet:
      type: object
      description: Pet information
      required:
        - name
        - type
        - age
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the pet
          example: 1
        name:
          type: string
          description: Name of the pet
          example: Buddy
        type:
          type: string
          description: Type of animal
          example: Dog
        age:
          type: integer
          format: int32
          description: Age of the pet in years
          example: 3
        breed:
          type: string
          description: Breed of the pet
          example: Golden Retriever
          nullable: true
        description:
          type: string
          description: Additional information about the pet
          example: Friendly and playful
          nullable: true
